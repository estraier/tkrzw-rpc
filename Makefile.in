# Makefile for Tkrzw-RPC

#================================================================
# Setting Variables
#================================================================

# Generic settings
SHELL := @SHELL@

# Package information
PACKAGE := @PACKAGE_NAME@
VERSION := @PACKAGE_VERSION@
PACKAGEDIR := $(PACKAGE)-$(VERSION)
PACKAGETGZ := $(PACKAGE)-$(VERSION).tar.gz
LIBVER := @MYLIBVER@
LIBREV := @MYLIBREV@
LIBFMT := @MYLIBFMT@

# Targets
HEADERFILES := @MYHEADERFILES@
LIBRARYFILES := @MYLIBRARYFILES@
LIBOBJFILES := @MYLIBOBJFILES@
DATAFILES := @MYDATAFILES@
COMMANDFILES := @MYCOMMANDFILES@
TESTFILES := @MYTESTFILES@
PCFILES := @MYPCFILES@

# Install destinations
prefix := @prefix@
exec_prefix := @exec_prefix@
datarootdir := @datarootdir@
INCLUDEDIR := @includedir@
LIBDIR := @libdir@
BINDIR := @bindir@
LIBEXECDIR := @libexecdir@
DATADIR := ${datarootdir}/tkrzw
PCDIR := @libdir@/pkgconfig
DESTDIR =

# Building configuration
PROTOC := @PROTOC@
GRPCCPP := @GRPCCPP@
CXX := @CXX@
CPPFLAGS := @MYCPPFLAGS@ \
  -D_TKRPC_PREFIX="\"$(prefix)\"" -D_TKRPC_INCLUDEDIR="\"$(INCLUDEDIR)\"" \
  -D_TKRPC_LIBDIR="\"$(LIBDIR)\"" -D_TKRPC_BINDIR="\"$(BINDIR)\"" \
  -D_TKRPC_LIBEXECDIR="\"$(LIBEXECDIR)\"" \
  -D_TKRPC_APPINC="\"-I$(INCLUDEDIR)\"" -D_TKRPC_APPLIBS="\"-L$(LIBDIR) @MYCMDLIBS@ @LIBS@\"" \
  -D_TKRPC_PKG_VERSION="\"$(VERSION)\"" -D_TKRPC_LIB_VERSION="\"$(LIBVER).$(LIBREV).$(LIBFMT)\""
CXXFLAGS := @MYCXXFLAGS@
LDSOFLAGS := @MYLDSOFLAGS@
LDFLAGS := @MYLDFLAGS@
CMDLDFLAGS := @MYCMDLDFLAGS@
CMDLIBS := @MYCMDLIBS@
TESTLIBS := @MYTESTLIBS@
LIBS := @LIBS@
RUNENV := @MYLDLIBPATHENV@=@MYLDLIBPATH@:.
VPATH := .:..

#================================================================
# Actions
#================================================================

all : $(LIBRARYFILES) $(COMMANDFILES)
	@printf '\n'
	@printf '#================================================================\n'
	@printf '# Ready to install.\n'
	@printf '#================================================================\n'

clean :
	rm -rf $(LIBRARYFILES) $(LIBOBJFILES) $(COMMANDFILES) $(TESTFILES)
	rm -rf *.pb.h *.pb.cc *.o *.d a.out *.class check.in check.out gmon.out *.vlog \
	  casket* *.tkh *.tkt *.tks *.flat *.log *~ hoge moge tako ika uni

untabify :
	ls *.cc *.h | while read name ; \
	  do \
	    sed -e 's/\t/        /g' -e 's/ *$$//' $$name > $$name~; \
	    [ -f $$name~ ] && mv -f $$name~ $$name ; \
	  done

install :
	mkdir -p $(DESTDIR)$(INCLUDEDIR)
	[ ! -f tkrzw_dbm_remote.h -a -f ../tkrzw_dbm_remote.h ] && cd .. ; \
	  cp -Rf $(HEADERFILES) $(DESTDIR)$(INCLUDEDIR)
	mkdir -p $(DESTDIR)$(LIBDIR)
	cp -Rf $(LIBRARYFILES) $(DESTDIR)$(LIBDIR)
	mkdir -p $(DESTDIR)$(BINDIR)
	cp -Rf $(COMMANDFILES) $(DESTDIR)$(BINDIR)
	mkdir -p $(DESTDIR)$(DATADIR)
	[ ! -f tkrzw_dbm_remote.h -a -f ../tkrzw_dbm_remote.h ] && cd .. ; \
	  cp -Rf $(DATAFILES) $(DESTDIR)$(DATADIR)
	mkdir -p $(DESTDIR)$(PCDIR)
	cp -Rf $(PCFILES) $(DESTDIR)$(PCDIR)
	@printf '\n'
	@printf '#================================================================\n'
	@printf '# Thanks for using Tkrzw-RPC.\n'
	@printf '#================================================================\n'

uninstall :
	-cd $(DESTDIR)$(INCLUDEDIR) && rm -f $(HEADERFILES)
	-cd $(DESTDIR)$(LIBDIR) && rm -f $(LIBRARYFILES)
	-cd $(DESTDIR)$(BINDIR) && rm -f $(COMMANDFILES)
	-cd $(DESTDIR)$(DATADIR) && rm -f $(DATAFILES)
	-rmdir $(DESTDIR)$(DATADIR) >/dev/null 2>&1 || true
	-cd $(DESTDIR)$(PCDIR) && rm -f $(PCFILES)

dist :
	$(MAKE) untabify
	$(MAKE) distclean
	rm -Rf "../$(PACKAGEDIR)" "../$(PACKAGETGZ)"
	cd .. && cp -R tkrzw-rpc $(PACKAGEDIR) && \
	  tar --exclude=".*" -cvf - $(PACKAGEDIR) | gzip -c > $(PACKAGETGZ)
	rm -Rf "../$(PACKAGEDIR)"
	sync ; sync

distclean : clean apidocclean
	[ ! -f example/Makefile ] || cd example && $(MAKE) clean
	rm -Rf Makefile tkrzw-rpc.pc \
	  config.cache config.log config.status config.tmp autom4te.cache build

check :
	$(MAKE) check-rpc-build-util
	$(MAKE) check-remotedbm-util
	$(MAKE) check-remotedbm-perf
	@printf '\n'
	@printf '#================================================================\n'
	@printf '# Checking completed.\n'
	@printf '#================================================================\n'

check-rpc-build-util :
	$(RUNENV) ./tkrzw_rpc_build_util version
	$(RUNENV) ./tkrzw_rpc_build_util config
	$(RUNENV) ./tkrzw_rpc_build_util config -v
	$(RUNENV) ./tkrzw_rpc_build_util config -i
	$(RUNENV) ./tkrzw_rpc_build_util config -l
	$(RUNENV) ./tkrzw_rpc_build_util config -p

check-remotedbm-util :
	$(RUNENV) ./tkrzw_dbm_remote_util echo "hello"
	$(RUNENV) ./tkrzw_dbm_remote_util inspect --index -1
	$(RUNENV) ./tkrzw_dbm_remote_util inspect
	$(RUNENV) ./tkrzw_dbm_remote_util set "one" "first"
	$(RUNENV) ./tkrzw_dbm_remote_util set "two" "second"
	$(RUNENV) ./tkrzw_dbm_remote_util set "three" "third"
	$(RUNENV) ./tkrzw_dbm_remote_util get "one"
	$(RUNENV) ./tkrzw_dbm_remote_util set --multi 1 hop 2 step 3 jump
	$(RUNENV) ./tkrzw_dbm_remote_util set --append ":" --multi 1 hop 2 step 3 jump
	$(RUNENV) ./tkrzw_dbm_remote_util get --multi 1 2 3
	$(RUNENV) ./tkrzw_dbm_remote_util remove --multi 1 2 3
	$(RUNENV) ./tkrzw_dbm_remote_util list
	$(RUNENV) ./tkrzw_dbm_remote_util list --move jump --jump_key "two"
	$(RUNENV) ./tkrzw_dbm_remote_util remove "one"
	$(RUNENV) ./tkrzw_dbm_remote_util rebuild
	$(RUNENV) ./tkrzw_dbm_remote_util sync
	$(RUNENV) ./tkrzw_dbm_remote_util search --mode "begin" "t"
	$(RUNENV) ./tkrzw_dbm_remote_util get "two"
	$(RUNENV) ./tkrzw_dbm_remote_util clear
	$(RUNENV) ./tkrzw_dbm_remote_util queue --notify "hop" "step" "jump"
	$(RUNENV) ./tkrzw_dbm_remote_util queue --retry 1

check-remotedbm-perf :
	$(RUNENV) ./tkrzw_dbm_remote_util clear
	$(RUNENV) ./tkrzw_dbm_remote_util rebuild "num_buckets=10000"
	$(RUNENV) ./tkrzw_dbm_remote_perf sequence --threads 1 --iter 10000
	$(RUNENV) ./tkrzw_dbm_remote_perf sequence --threads 1 --iter 10000 --stream
	$(RUNENV) ./tkrzw_dbm_remote_perf sequence --threads 1 --iter 10000 --multi 10
	$(RUNENV) ./tkrzw_dbm_remote_perf sequence --threads 4 --iter 5000 --random_key --random_value
	$(RUNENV) ./tkrzw_dbm_remote_perf sequence --threads 4 --separate \
	  --iter 5000 --random_key --random_value
	$(RUNENV) ./tkrzw_dbm_remote_perf sequence --threads 4 --separate \
	  --iter 5000 --random_key --random_value --stream --ignore_result
	$(RUNENV) ./tkrzw_dbm_remote_perf sequence --threads 4 --separate \
	  --iter 5000 --random_key --random_value --multi 10
	$(RUNENV) ./tkrzw_dbm_remote_perf wicked --threads 1 --iter 10000
	$(RUNENV) ./tkrzw_dbm_remote_perf wicked --threads 4 --iter 5000 \
	  --iterator --sync --clear --rebuild
	$(RUNENV) ./tkrzw_dbm_remote_perf wicked --threads 4 --separate --iter 5000 \
	  --iterator --sync --clear --rebuild
	$(RUNENV) ./tkrzw_dbm_remote_perf queue --threads 4 --iter 1000

test : $(TESTFILES)

testrun :
	$(RUNENV) ./tkrzw_server_test
	$(RUNENV) ./tkrzw_dbm_remote_test

apidoc :
	$(MAKE) apidocclean
	mkdir -p api-doc
	doxygen

apidocclean :
	rm -rf api-doc api-doc-tmp

.PHONY : all clean install casket check apidoc apidocclean

#================================================================
# Suffix rules
#================================================================

OBJS := $(LIBOBJFILES) $(COMMANDFILES:%=%.o) $(TESTFILES:%=%.o)
SRCS := $(OBJS:%.o=%.c)
DEPS := $(SRCS:%.c=%.d)

-include $(DEPS)

.SUFFIXES :
.SUFFIXES : .cc .o

.cc.o :
	$(CXX) -c $(CPPFLAGS) -MMD $(CXXFLAGS) $<

#================================================================
# Building protocol buffers
#================================================================

tkrzw_rpc.pb.h tkrzw_rpc.pb.cc : tkrzw_rpc.proto
	$(PROTOC) -I . -I .. --cpp_out=. $<

tkrzw_rpc.grpc.pb.h tkrzw_rpc.grpc.pb.cc tkrzw_rpc_mock.grpc.pb.h : tkrzw_rpc.proto
	$(PROTOC) -I . -I .. --grpc_out=generate_mock_code=true:. \
	  --plugin=protoc-gen-grpc=$(GRPCCPP) $<

#================================================================
# Building libraries
#================================================================

libtkrzw_rpc.a : $(LIBOBJFILES)
	$(AR) $(ARFLAGS) $@ $(LIBOBJFILES)

libtkrzw_rpc.so.$(LIBVER).$(LIBREV).$(LIBFMT) : $(LIBOBJFILES)
	$(CXX) $(CXXFLAGS) $(LDSOFLAGS) -o $@ $(LIBOBJFILES) $(LDFLAGS) $(LIBS)

libtkrzw_rpc.so.$(LIBVER) : libtkrzw_rpc.so.$(LIBVER).$(LIBREV).$(LIBFMT)
	ln -f -s libtkrzw_rpc.so.$(LIBVER).$(LIBREV).$(LIBFMT) $@

libtkrzw_rpc.so : libtkrzw_rpc.so.$(LIBVER).$(LIBREV).$(LIBFMT)
	ln -f -s libtkrzw_rpc.so.$(LIBVER).$(LIBREV).$(LIBFMT) $@

libtkrzw_rpc.$(LIBVER).$(LIBREV).$(LIBFMT).dylib : $(LIBOBJFILES)
	$(CXX) $(CXXFLAGS) -dynamiclib -o $@ \
	  -install_name $(LIBDIR)/libtkrzw_rpc.$(LIBVER).dylib \
	  -current_version $(LIBVER).$(LIBREV).$(LIBFMT) -compatibility_version $(LIBVER) \
	  $(LIBOBJFILES) $(LDFLAGS) $(LIBS)

libtkrzw_rpc.$(LIBVER).dylib : libtkrzw_rpc.$(LIBVER).$(LIBREV).$(LIBFMT).dylib
	ln -f -s libtkrzw_rpc.$(LIBVER).$(LIBREV).$(LIBFMT).dylib $@

libtkrzw_rpc.dylib : libtkrzw_rpc.$(LIBVER).$(LIBREV).$(LIBFMT).dylib
	ln -f -s libtkrzw_rpc.$(LIBVER).$(LIBREV).$(LIBFMT).dylib $@

tkrzw_dbm_remote.o tkrzw_server.o tkrzw_server_impl.h : tkrzw_rpc.pb.h tkrzw_rpc.grpc.pb.h

#================================================================
# Building binaries
#================================================================

tkrzw_rpc_build_util : tkrzw_rpc_build_util.o $(LIBRARYFILES)
	$(CXX) $(CXXFLAGS) -o $@ $< $(LDFLAGS) $(CMDLDFLAGS) $(CMDLIBS) $(LIBS)

tkrzw_server : tkrzw_server.o $(LIBRARYFILES)
	$(CXX) $(CXXFLAGS) -o $@ $< $(LDFLAGS) $(CMDLDFLAGS) $(CMDLIBS) $(LIBS)

tkrzw_dbm_remote_util : tkrzw_dbm_remote_util.o $(LIBRARYFILES)
	$(CXX) $(CXXFLAGS) -o $@ $< $(LDFLAGS) $(CMDLDFLAGS) $(CMDLIBS) $(LIBS)

tkrzw_dbm_remote_perf : tkrzw_dbm_remote_perf.o $(LIBRARYFILES)
	$(CXX) $(CXXFLAGS) -o $@ $< $(LDFLAGS) $(CMDLDFLAGS) $(CMDLIBS) $(LIBS)

#================================================================
# Building tests
#================================================================

tkrzw_server_test.o : tkrzw_server_impl.h tkrzw_rpc.pb.h tkrzw_rpc.grpc.pb.h

tkrzw_server_test : tkrzw_server_test.o $(LIBRARYFILES) 
	$(CXX) $(CXXFLAGS) -o $@ $< $(CMDLDFLAGS) $(CMDLIBS) $(TESTLIBS) $(LIBS)

tkrzw_dbm_remote_test.o : tkrzw_rpc.pb.h tkrzw_rpc_mock.grpc.pb.h

tkrzw_dbm_remote_test : tkrzw_dbm_remote_test.o $(LIBRARYFILES)
	$(CXX) $(CXXFLAGS) -o $@ $< $(CMDLDFLAGS) $(CMDLIBS) $(TESTLIBS) $(LIBS)

# END OF FILE
